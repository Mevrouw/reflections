What happens when you initialize a repository? Why do you need to do it?
	a .git file is added to you directory so you can start adding commits. Git needs to know about this directory before it can start saving versions.

How is the staging area different from the working directory and the repository? What value do you think it offers?

	It helps making commits more logical, as you get to chose which file you want to b	e a part of the commit.

How can you use the staging area to make sure you have one commit per logical change?

	It allows you to add only the file(s) that belong to the described. 

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

	If you want to keep different versions of your work, you can keep al the changes you make in different branches. It also gives the freedom of experimenting into different directions at the same time.

How do the diagrams help you visualize the branch structure?

	By showing the structure of the work of the branch...

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

	The result of merging two branches together is that the new head has both the changes from the branch as the changes in the master (made since the brance-off) in it, without overwriting oneanother. 

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

	Pro: saves a lot of time!
